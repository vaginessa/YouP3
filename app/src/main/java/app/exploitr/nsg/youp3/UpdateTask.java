package app.exploitr.nsg.youp3;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Environment;
import android.support.design.widget.Snackbar;
import android.util.Log;
import android.view.View;

import com.androidnetworking.AndroidNetworking;
import com.androidnetworking.common.Priority;
import com.androidnetworking.error.ANError;
import com.androidnetworking.interfaces.DownloadListener;
import com.androidnetworking.interfaces.DownloadProgressListener;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

class UpdateTask extends AsyncTask<Void, Void, String> {

    private JSONObject maindata;
    private JSONArray mainArray;
    private Context mContext;
    private HttpURLConnection connection;
    private URL totalUrl;
    private BufferedReader reader;
    private View mView;

    UpdateTask(Context context, View view) {
        this.mContext = context;
        this.mView = view;
    }

    @Override
    protected String doInBackground(Void... params) {

        int x = 0;
        try {
            totalUrl = new URL("https://api.github.com/repos/exploitr/youp3/releases/latest");
            System.out.println(x++);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        try {
            connection = (HttpURLConnection) totalUrl.openConnection();
            connection.connect();
            System.out.println(x++);
        } catch (IOException e) {
            e.printStackTrace();
        }
        try {
            reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            System.out.println(x++);
        } catch (IOException e) {
            e.printStackTrace();
        }

        StringBuilder dataProcessor = new StringBuilder();
        System.out.println(x++);
        String out;

        try {
            while ((out = reader.readLine()) != null) {
                dataProcessor.append(out).append("\n");
                System.out.println(x++);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        if (connection != null) connection.disconnect();
        System.out.println("disconnect");
        if (reader != null) try {
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            maindata = new JSONObject(dataProcessor.toString());
        } catch (JSONException e) {
            e.printStackTrace();
        }
        Log.v("Update", maindata.toString());
        try {
            mainArray = maindata.getJSONArray("assets");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        Log.v("Update1", mainArray.toString());

        try {
            maindata = mainArray.getJSONObject(0);
        } catch (JSONException e) {
            e.printStackTrace();
        }
        Log.v("Update3", maindata.toString());

        String main = null;
        try {
            main = maindata.getString("browser_download_url");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        return main;
    }

    @Override
    protected void onPostExecute(String link) {
        super.onPostExecute(link);

        final ProgressDialog dialog = new ProgressDialog(mContext);
        dialog.setIndeterminate(false);
        dialog.setMessage("Downloading Package - Please Wait");
        dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        dialog.setCancelable(true);
        dialog.show();
        final Long x = System.currentTimeMillis();
        System.out.println("Link :" + link);

        final File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath() + "/YouP3" + x + ".apk");
        AndroidNetworking.download(link, Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath(), "/YouP3" + x + ".apk")
                .setTag("Update")
                .setPriority(Priority.HIGH)
                .build()
                .setDownloadProgressListener(new DownloadProgressListener() {
                    @Override
                    public void onProgress(long bytesDownloaded, long totalBytes) {
                        int percentage = (int)(bytesDownloaded * 100.0 / totalBytes + 0.5);
                        System.out.println(percentage);
                        dialog.setProgress(percentage);
                    }
                })
                .startDownload(new DownloadListener() {
                    @Override
                    public void onDownloadComplete() {
                        dialog.dismiss();
                        Uri path = Uri.fromFile(file);
                        Intent intent = new Intent(Intent.ACTION_VIEW);
                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                        intent.setDataAndType(path, "application/vnd.android.package-archive");
                        mContext.startActivity(intent);
                    }

                    @Override
                    public void onError(ANError error) {
                        dialog.dismiss();
                        Snackbar.make(mView, "Update Error :" + error.toString(), Snackbar.LENGTH_LONG).show();
                        error.printStackTrace();
                    }
                });
    }
}
